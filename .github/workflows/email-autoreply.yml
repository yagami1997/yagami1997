name: Email Request with Approval

on:
  issues:
    types: [opened]
  issue_comment:
    types: [created]

permissions:
  issues: write
  contents: read

jobs:
  initial-response:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && contains(github.event.issue.title, 'Email Request')
    steps:
      - name: Initial Response
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `Thank you for your interest in secure communication!

Your request has been received and is pending review. If approved, I will share my GPG encrypted contact information with you.

Please provide some context about why you'd like to connect, which will help me process your request faster.`
            });
            
            // Add a pending label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['pending-approval']
            });

  approve-and-share:
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'issue_comment' && 
      contains(github.event.comment.body, 'Fox 3') && 
      github.event.comment.user.login == github.repository_owner
    steps:
      - name: Share Contact Info
        uses: actions/github-script@v6
        env:
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
        with:
          script: |
            const issueNumber = context.issue.number;
            const contactEmail = process.env.CONTACT_EMAIL;
            const gpgKey = process.env.GPG_KEY;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: `### üîê Request Approved

Thank you for your patience! Your request has been approved.

Here's my contact information for secure communication:

#### üìß Email Address:
\`\`\`
${contactEmail}
\`\`\`

#### üîë GPG Key Instructions:
\`\`\`bash
# Import my public key from keyserver
gpg --keyserver hkps://keys.openpgp.org --recv-keys ${gpgKey}

# Verify fingerprint before sending sensitive data
gpg --fingerprint ${gpgKey}
\`\`\`

![End-to-End Encrypted](https://img.shields.io/badge/E2E-Encrypted-00C853?style=flat-square&logo=gnuprivacyguard&logoColor=white)

I look forward to our encrypted conversation!`
            });
            
            try {
              // Try to remove the pending-approval label if it exists
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                name: 'pending-approval'
              });
            } catch (error) {
              console.log('Label may not exist, continuing');
            }
            
            // Add approved label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['approved']
            });
